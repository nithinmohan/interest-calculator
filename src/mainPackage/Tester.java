package mainPackage;


import mainPackage.DateUtil;
import mainPackage.Calculator;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Enumeration;
import java.util.GregorianCalendar;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Nithin Mohan
 */
public class Tester extends javax.swing.JFrame {

    /**
     * Creates new form Tester
     */
    private Calculator calculator;
    public Tester() {
        initComponents();
        formatComponents();
        calculator= new Calculator();
    }
    private void formatComponents(){
        multiplierVisibility(false);
        resultVisibility(false,false);
        errorMessageVisibility(false);
    }
    private void multiplierVisibility(boolean b){
        typeOfMultiplierLabel.setVisible(b);
        typeOfMultiplier12RB.setVisible(b);
        typeOfMultiplier6RB.setVisible(b);
        typeOfMultiplier3RB.setVisible(b);
    }
    private void resultVisibility(boolean b,boolean expireDateVisibility){
        finalAmountLabel.setVisible(b);
        finalAmountValue.setVisible(b);
        interestLabel.setVisible(b);
        interestValue.setVisible(b);
        expireDateLabel.setVisible(expireDateVisibility);
        expireDateValue.setVisible(expireDateVisibility);
    }
    private void errorMessageVisibility(boolean b){
        errorMessage.setVisible(b);
    } 
    private void setErrorText(String s){
        errorMessage.setText(s);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        amountLabel = new javax.swing.JLabel();
        jLabel2rateOfInterestLabel = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        timeTypeLabel = new javax.swing.JLabel();
        startDateLabel = new javax.swing.JLabel();
        typeOfCalculationLabel = new javax.swing.JLabel();
        typeOfCalculationSimpleRB = new javax.swing.JRadioButton();
        typeOfCalculationCompoundRB = new javax.swing.JRadioButton();
        typeOfMultiplierLabel = new javax.swing.JLabel();
        typeOfMultiplier3RB = new javax.swing.JRadioButton();
        typeOfMultiplier6RB = new javax.swing.JRadioButton();
        typeOfMultiplier12RB = new javax.swing.JRadioButton();
        calculate = new javax.swing.JButton();
        startDateTextField = new javax.swing.JTextField();
        timeDaysTextField = new javax.swing.JTextField();
        rateOfInterestTextField = new javax.swing.JTextField();
        amountTextField = new javax.swing.JTextField();
        finalAmountLabel = new javax.swing.JLabel();
        finalAmountValue = new javax.swing.JLabel();
        interestLabel = new javax.swing.JLabel();
        interestValue = new javax.swing.JLabel();
        expireDateLabel = new javax.swing.JLabel();
        expireDateValue = new javax.swing.JLabel();
        errorMessage = new javax.swing.JLabel();
        timeYearsTextField = new javax.swing.JTextField();
        timeMonthsTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        clearMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Interest Calculator");

        amountLabel.setText("Amount:");

        jLabel2rateOfInterestLabel.setText("Rate of Interest:");

        timeLabel.setText("Time:");

        timeTypeLabel.setText("In:");

        startDateLabel.setText("Start Date:");

        typeOfCalculationLabel.setText("Type of calculation:");

        buttonGroup2.add(typeOfCalculationSimpleRB);
        typeOfCalculationSimpleRB.setSelected(true);
        typeOfCalculationSimpleRB.setText("Simple");
        typeOfCalculationSimpleRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeOfCalculationSimpleRBActionPerformed(evt);
            }
        });

        buttonGroup2.add(typeOfCalculationCompoundRB);
        typeOfCalculationCompoundRB.setText("Compound");
        typeOfCalculationCompoundRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeOfCalculationCompoundRBActionPerformed(evt);
            }
        });

        typeOfMultiplierLabel.setText("Type of multiplier:");
        typeOfMultiplierLabel.setOpaque(true);

        buttonGroup3.add(typeOfMultiplier3RB);
        typeOfMultiplier3RB.setSelected(true);
        typeOfMultiplier3RB.setText("3 months");

        buttonGroup3.add(typeOfMultiplier6RB);
        typeOfMultiplier6RB.setText("6 months");

        buttonGroup3.add(typeOfMultiplier12RB);
        typeOfMultiplier12RB.setText("1 year");
        typeOfMultiplier12RB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeOfMultiplier12RBActionPerformed(evt);
            }
        });

        calculate.setText("Calculate");
        calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateActionPerformed(evt);
            }
        });

        timeDaysTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeDaysTextFieldActionPerformed(evt);
            }
        });

        rateOfInterestTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rateOfInterestTextFieldActionPerformed(evt);
            }
        });

        amountTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountTextFieldActionPerformed(evt);
            }
        });

        finalAmountLabel.setText("Final Amount:");

        interestLabel.setText("Interest:");

        expireDateLabel.setText("Expire Date:");

        timeYearsTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeYearsTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("Days");

        jLabel2.setText("Months");

        jLabel3.setText("Years");

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        clearMenuItem.setMnemonic('c');
        clearMenuItem.setText("Clear");
        clearMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(clearMenuItem);

        menuBar.add(editMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(typeOfCalculationSimpleRB)
                                    .addComponent(typeOfMultiplier3RB))
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(typeOfCalculationCompoundRB)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(typeOfMultiplier6RB)
                                        .addGap(18, 18, 18)
                                        .addComponent(typeOfMultiplier12RB))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(146, 146, 146)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(timeYearsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(startDateLabel)
                                .addGap(35, 35, 35)
                                .addComponent(startDateTextField))
                            .addComponent(typeOfMultiplierLabel)
                            .addComponent(typeOfCalculationLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(timeTypeLabel)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(timeLabel)
                                    .addComponent(jLabel2rateOfInterestLabel))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(amountTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                                            .addComponent(rateOfInterestTextField, javax.swing.GroupLayout.Alignment.LEADING)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(timeDaysTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(timeMonthsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(53, 53, 53)
                            .addComponent(calculate))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(expireDateLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(expireDateValue))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(interestLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(interestValue))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(16, 16, 16)
                                            .addComponent(errorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(finalAmountLabel))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(finalAmountValue)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(amountLabel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {amountLabel, jLabel2rateOfInterestLabel, startDateLabel, timeLabel, timeTypeLabel, typeOfCalculationLabel, typeOfMultiplierLabel});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amountLabel)
                    .addComponent(amountTextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2rateOfInterestLabel)
                    .addComponent(rateOfInterestTextField))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeLabel)
                    .addComponent(timeDaysTextField)
                    .addComponent(timeMonthsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeYearsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeTypeLabel)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startDateLabel)
                    .addComponent(startDateTextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeOfCalculationLabel)
                    .addComponent(typeOfCalculationSimpleRB)
                    .addComponent(typeOfCalculationCompoundRB))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeOfMultiplierLabel)
                    .addComponent(typeOfMultiplier3RB)
                    .addComponent(typeOfMultiplier6RB)
                    .addComponent(typeOfMultiplier12RB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calculate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finalAmountLabel)
                    .addComponent(finalAmountValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(interestLabel)
                    .addComponent(interestValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(expireDateLabel)
                    .addComponent(expireDateValue)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void rateOfInterestTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rateOfInterestTextFieldActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_rateOfInterestTextFieldActionPerformed

    private String getSelectedButtonText(ButtonGroup buttonGroup) {
        for (Enumeration<AbstractButton> buttons = buttonGroup.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();

            if (button.isSelected()) {
                return button.getText();
            }
        }

        return null;
    }
    private void calculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateActionPerformed
        // TODO add your handling code here:
        double amount;
        double rateOfInterest;
        int timeInDays;
        int timeInMonths;
        int timeInYears;
        Date startDate;
        String typeOfCalculationString;
        String typeOFMultiplierString;
        errorMessageVisibility(false);
        try{
                amount=Double.parseDouble(amountTextField.getText());
                rateOfInterest=Double.parseDouble(rateOfInterestTextField.getText());
                try{
                    timeInDays=(int)(Double.parseDouble(timeDaysTextField.getText()));
                }
                catch(NumberFormatException ex){
                    timeInDays=0;
                }
                try{
                    timeInMonths=(int)(Double.parseDouble(timeMonthsTextField.getText()));
                }
                catch(NumberFormatException ex){
                    timeInMonths=0;
                }
                try{
                    timeInYears=(int)(Double.parseDouble(timeYearsTextField.getText()));
                }
                catch(NumberFormatException ex){
                    timeInYears=0;
                }
                startDate=DateUtil.convertToDate(startDateTextField.getText());
                typeOfCalculationString=getSelectedButtonText(buttonGroup2);
                typeOFMultiplierString=getSelectedButtonText(buttonGroup3);
        }
        catch(NumberFormatException ex){
            setErrorText("Bad Input");
            errorMessageVisibility(true);
            return;
        }
        int typeOfCalculation=0;
        int typeOFMultiplier=3;
        switch (typeOfCalculationString) {
            case "Simple":
                typeOfCalculation=0;
                break;
            case "Compound":
                typeOfCalculation=1;
                break;
        }
        switch (typeOFMultiplierString) {
            case "3 months":
                typeOFMultiplier=3;
                break;
            case "6 months":
                typeOFMultiplier=6;
                break;
            case "1 year":
                typeOFMultiplier=12;
                break;
        }
        calculator.setAmount(amount);
        calculator.setRateOfInterest(rateOfInterest);
        calculator.setTimeInDays(timeInDays);
        calculator.setTimeInMonths(timeInMonths);
        calculator.setTimeInYears(timeInYears);
        calculator.setStartDate(startDate);
        calculator.setTypeOfCalculation(typeOfCalculation);
        calculator.setTypeOfMultiplication(typeOFMultiplier);
        calculator.calculate();
        finalAmountValue.setText((String.valueOf(Math.round(calculator.getFinalAmount()))));
        interestValue.setText((String.valueOf(Math.round(calculator.getInterest()))));
        if(calculator.getDateOfExpire()==null){
            resultVisibility(true, false);
        }
        else{
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy MMM dd EEE");
        Calendar calendar = new GregorianCalendar();
        calendar.setTime(calculator.getDateOfExpire());
        expireDateValue.setText(sdf.format(calendar.getTime()));
        resultVisibility(true, true);
        }
    }//GEN-LAST:event_calculateActionPerformed

    private void amountTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountTextFieldActionPerformed

    private void typeOfMultiplier12RBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeOfMultiplier12RBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeOfMultiplier12RBActionPerformed

    private void typeOfCalculationCompoundRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeOfCalculationCompoundRBActionPerformed
        // TODO add your handling code here:
            multiplierVisibility(true);
    }//GEN-LAST:event_typeOfCalculationCompoundRBActionPerformed

    private void typeOfCalculationSimpleRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeOfCalculationSimpleRBActionPerformed
        // TODO add your handling code here:
            multiplierVisibility(false);
    }//GEN-LAST:event_typeOfCalculationSimpleRBActionPerformed

    private void clearMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearMenuItemActionPerformed
        // TODO add your handling code here:
        resultVisibility(false,false);
        amountTextField.setText(null);
        timeDaysTextField.setText(null);
        timeMonthsTextField.setText(null);
        timeYearsTextField.setText(null);
        rateOfInterestTextField.setText(null);
        startDateTextField.setText(null);
    }//GEN-LAST:event_clearMenuItemActionPerformed

    private void timeDaysTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeDaysTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeDaysTextFieldActionPerformed

    private void timeYearsTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeYearsTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeYearsTextFieldActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tester.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tester.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tester.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tester.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tester().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel amountLabel;
    private javax.swing.JTextField amountTextField;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton calculate;
    private javax.swing.JMenuItem clearMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JLabel errorMessage;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JLabel expireDateLabel;
    private javax.swing.JLabel expireDateValue;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel finalAmountLabel;
    private javax.swing.JLabel finalAmountValue;
    private javax.swing.JLabel interestLabel;
    private javax.swing.JLabel interestValue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel2rateOfInterestLabel;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JTextField rateOfInterestTextField;
    private javax.swing.JLabel startDateLabel;
    private javax.swing.JTextField startDateTextField;
    private javax.swing.JTextField timeDaysTextField;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JTextField timeMonthsTextField;
    private javax.swing.JLabel timeTypeLabel;
    private javax.swing.JTextField timeYearsTextField;
    private javax.swing.JRadioButton typeOfCalculationCompoundRB;
    private javax.swing.JLabel typeOfCalculationLabel;
    private javax.swing.JRadioButton typeOfCalculationSimpleRB;
    private javax.swing.JRadioButton typeOfMultiplier12RB;
    private javax.swing.JRadioButton typeOfMultiplier3RB;
    private javax.swing.JRadioButton typeOfMultiplier6RB;
    private javax.swing.JLabel typeOfMultiplierLabel;
    // End of variables declaration//GEN-END:variables

}
